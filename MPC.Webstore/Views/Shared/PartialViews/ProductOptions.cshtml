@model MPC.Models.DomainModels.Item
@using Newtonsoft.Json;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    int StockCount = 1;
    int PriceBackgroundCount = 0;
    string priceMatrixBackground = "";
}

<div class="container content_area">
    <div class="row left_right_padding">
        <div class="signin_heading_div float_left_simple">
            <label id="lblProductName" class="product_detail_main_heading">@Model.ProductName</label>
        </div>
        <div class="clearBoth">
            &nbsp;
        </div>
        <div class="StocksDelivryContainer col-md-8 col-lg-8 col-xs-12 col-sm-12">
            <div id="divStockOptions" class="float_left_simple LGBC rounded_corners width730" style="padding: 5px;">
                <div class="SelectQtyContainer textAlignLeft">
                    Options
                </div>
                <div class="white_background rounded_corners divStk">
                    <div class="float_left_simple Width100Percent">
                        <div class="spacer10pxtop">

                            @foreach (var stock in ViewData["StckOptions"] as List<MPC.Models.DomainModels.ItemStockOption>)
                            {
                                string stockClassName = "rbStockType" + StockCount;
                                if (StockCount == 1)
                                {
                                    <div class=float_left_simple style="height:55px;">
                                        <input type=radio name=StockPaper checked data-id="@stock.StockId" class="@stockClassName" style="position:absolute;opacity:0;" />
                                        <label for=radio1 class=grayRadiantbtn onclick=SelectStock('@stockClassName');> @stock.StockLabel </label>
                                    </div>
                                }
                                else
                                {
                                    <div class=float_left_simple style="height:55px;">
                                        <input type=radio name=StockPaper data-id="@stock.StockId" class="@stockClassName" style="position:absolute;opacity:0;" />
                                        <label for=radio1 class=grayRadiantbtn onclick=SelectStock('@stockClassName');> @stock.StockLabel </label>
                                    </div>
                                }

                                StockCount++;
                            }
                        </div>
                        <div class="clearBoth">
                            &nbsp;
                        </div>
                        <br />
                        <div class="marginLeft Fsize19 template_designing margnTop10 LandPage-Heading-Cs">
                            <label>Refining Options</label>
                        </div>
                        <div class="width365pxM250p">
                            @foreach (var costcenter in ViewData["CostCenters"] as List<MPC.Models.Common.AddOnCostsCenter>)
                            {
                                <div class="float_left_simple spacerbottom" style="width: 120px;">
                                    <img class="RfgImgCs" src=@costcenter.AddOnImage />
                                </div>
                                <div class="extra_item float_left_simple">
                                    <input id="@costcenter.ProductAddOnID" type="checkbox" name="addOnChecks" class="checkBoxAdOnPriceCheckBox backgroundIMg" />
                                    <label class="margin5 colorBlack">@costcenter.AddOnName</label>
                                    <div class="extra_pricing float_right">
                                        <label id="lblAddOnPrice">@ViewBag.Currency@costcenter.AddOnPrice</label>
                                    </div>
                                    <label class="checkBoxAdOnDesc marginLeft" >@costcenter.WebStoreDesc</label>
                                    <div class="clearBoth">
                                        &nbsp;
                                    </div>
                                </div>
                                <div class="clearBoth">
                                    &nbsp;
                                </div>
                                <div class="BorderLG_LP">
                                    &nbsp;
                                </div>
                            }
                        </div>

                    </div>
                    <div class="clearBoth">
                        &nbsp;
                    </div>
                </div>

            </div>
            <div class="signin_heading_div float_left_simple UploadContainerCs">
                <label id="ltrlUpFlH" class="textAlignLeft float_left_simple">Upload artwork design</label>
                <div class="FormatContainer">
                    <div class="float_left_simple Fsize12 lbFormat">
                        Permitted Format
                    </div>
                    <div>
                        <img id="imgpdf" alt="" src="~/images/pdfFormat.PNG" class="float_left_simple FormatedImgs" />
                        @*<img id="imgpng"  alt="" src="~/images/pngFormat.PNG" class="float_left_simple FormatedImgs" />*@<img id="imgpng" alt="" src="~/images/pngFormat.PNG" class="float_left_simple FormatedImgs" /><img id="imgpng" alt="" src="~/images/pngFormat.PNG" class="float_left_simple FormatedImgs" /><img id="imgpng" alt="" src="~/images/pngFormat.PNG" class="float_left_simple FormatedImgs" /><img id="imgpng" alt="" src="~/images/pngFormat.PNG" class="float_left_simple FormatedImgs" /><img id="imgpng" alt="" src="~/images/pngFormat.PNG" class="float_left_simple FormatedImgs" /><img id="imgpng" alt="" src="~/images/pngFormat.PNG" class="float_left_simple FormatedImgs" /><img id="imgpng" alt="" src="~/images/pngFormat.PNG" class="float_left_simple FormatedImgs" /><img id="imgpng" alt="" src="~/images/pngFormat.PNG" class="float_left_simple FormatedImgs" />
                        <img id="imgjpg" alt="" src="~/images/jpgFormat.PNG" class="float_left_simple FormatedImgs" />
                        @*<img id="imggif"  alt="" src="~/images/gifFormat.PNG" class="float_left_simple FormatedImgs" />*@<img id="imggif" alt="" src="~/images/gifFormat.PNG" class="float_left_simple FormatedImgs" /><img id="imggif" alt="" src="~/images/gifFormat.PNG" class="float_left_simple FormatedImgs" /><img id="imggif" alt="" src="~/images/gifFormat.PNG" class="float_left_simple FormatedImgs" /><img id="imggif" alt="" src="~/images/gifFormat.PNG" class="float_left_simple FormatedImgs" /><img id="imggif" alt="" src="~/images/gifFormat.PNG" class="float_left_simple FormatedImgs" /><img id="imggif" alt="" src="~/images/gifFormat.PNG" class="float_left_simple FormatedImgs" /><img id="imggif" alt="" src="~/images/gifFormat.PNG" class="float_left_simple FormatedImgs" /><img id="imggif" alt="" src="~/images/gifFormat.PNG" class="float_left_simple FormatedImgs" />
                    </div>
                </div>
                <div class="float_left_simple LGBC rounded_corners paddingLeft5px H4B
                     UplodArkworkContainer">
                    <div class="white_background rounded_corners padding10 SidesContainerCS">
                        <div class="rptContainers">
                            <div onclick="return ShowUpload1();" id="ArtWorkUploadContainer" class="artworkarrow">
                                <img id="ImgArrow" alt="" src="~/images/artwork_arrow_icons.png" style="width: 60px;" /><br />
                                <label style="font-size: 16px;
                                        font-weight: bold;">Supply your own artwork</label><br />
                                <label style="font-size: 13px;">Add multiple files</label>
                            </div>
                            <div class="clearBoth">
                                &nbsp;
                            </div>
                            @*foreach (var templateItem in rptTemplte){*@
                            <div id="DivSide1" class="LGBC BD_PCS rounded_corners">
                                <asp:hyperlink id="hlSide1">
                                    <div class="PDTC_LP FI_PCS">
                                        <asp:image id="imgSide1" cssclass="full_img_ThumbnailPath_LP" />
                                    </div>
                                </asp:hyperlink>
                                <div class="confirm_design LGBC" style="display: none;">
                                    <label id="lblFront" class="ProdtPricedisplayNoneCs DisplayNoneCSS6"></label>
                                </div>
                                <div class="modify_button_container" style="position: absolute; padding: 0px; margin-top: -27px;">
                                    <div>
                                        <asp:button id="btnSide1Modify" cssclass="btn_brown_small" text="Modify"
                                                    onclick="lnkBtnSide_Modify_Click" />
                                    </div>
                                </div>
                            </div>
                            @*}@foreach (var artworkFile in rptUploadFiles){*@
                            <div id="DivSide1" class="LGBC BD_PCS rounded_corners">
                                <div class="DeleteIconPP">
                                    <asp:button id="DeleteBtn2" cssclass="delete_icon_img " onclientclick="return confirm('Are you sure you want to delete this Design?');"
                                                commandname="DeleteDesign" />
                                </div>
                                <asp:hyperlink id="hlSide1">
                                    <div class="PDTC_LP FI_PCS">
                                        <asp:image id="imgSide1" cssclass="full_img_ThumbnailPath_LP" />
                                    </div>
                                </asp:hyperlink>
                                <div class="confirm_design LGBC height40_LP ">
                                    <label id="lblFront" class="">front</label>
                                </div>
                            </div>
                            @*}*@
                            <div class="clearBoth">
                                &nbsp;
                            </div>
                        </div>
                        <div class="float_left_simple cntuploadfilebtns">

                            <button class="btn_upload_files_Prod_Land rounded_corners5"
                                    onclick="return ShowUpload1();">
                                Upload files
                            </button><br />
                            <button class="btn_BackTo_Tem_Prod_Land rounded_corners5">
                                Back to templates
                            </button>
                        </div>
                        <div id="MoreSidesCont" class="ViewTemSidesCS" style="display:none;">
                            <label id="ViewMore">View more sides</label><br />
                            <label id="imDesgMode">in designer mode</label>
                        </div>
                        <asp:image id="imgDesignSize" cssclass="DesgnFormteImg" />
                    </div>
                </div>
            </div>

        </div>
        <div class="float_left_simple PriceTableCs col-md-4 col-lg-4 col-xs-12">
            <div class="LGBC rounded_corners Pad5px">
                <div class="SelectQtyContainer">
                    Select your quantity
                </div>
                <div class="white_background rounded_corners padding10">
                    <div class="textAlignLeft Mleft10 gallery">
                        <asp:hyperlink id="lnkPdfFile">
                            <asp:image id="FinishedGoodImg" cssclass="full_img_ThumbnailPath" />
                        </asp:hyperlink>
                    </div>
                    <div>
                        @if (Model.IsQtyRanged == true)
                        {
                            <input type="text" id="rangedQuantityOrdered" class="dropdownBorderCS Width60pixel Mleft10 Fsize17" onblur="CalculatePriceBaseOnRangedQuantity();" />
                            <input type="button" onclick="CalculatePriceBaseOnRangedQuantity(); return false;" class="go_button rounded_corners5 width35pix"
                                   value="Go" />
                        }
                        else
                        {
                            <select class="dropdownBorderCS dropdown190 rounded_corners5 template_designing float_right dropdownQtyListClass clearRight ">
                                @foreach (var quantity in Model.ItemPriceMatrices as List<MPC.Models.DomainModels.ItemPriceMatrix>)
                                {
                                        <option value="@quantity.PriceMatrixId">@quantity.Quantity</option>
                                }

                        </select>
                        }

                    </div>
                    <div class="clearBoth">
                        &nbsp;
                    </div>
                    <br />
                    <div class=" left_align productStockDesc">
                        <label class="Fsize18 colorBlack left_align colorDGry">@Model.ProductName</label><br />
                        <br />
                        <label id="lblStock" class="LightGrayLabels"></label>
                        <label id="lblExtra" class="LightGrayLabels"></label>
                    </div>
                    <div class="clearBoth">
                        &nbsp;
                    </div>
                    <div class="float_left_simple grossTotaldiv">
                        <label id="lblTotlTxt" class="float_left_simple">Total</label>
                        @if (MPC.Webstore.Common.UserCookieManager.isIncludeTax == true)
                        {
                            <label id="lblTaxLabel" class="Fsize13 spacer10pxtop float_right marginLeft">inc. VAT</label>
                        }
                        else
                        {
                            <label id="lblTaxLabel" class="Fsize13 spacer10pxtop float_right marginLeft">ex. VAT</label>
                        }

                        <label id="lblGrossTotal" class="float_right">$0</label>

                    </div>
                    @if (Model.IsStockControl == true)
                    {

                        if (ViewBag.ItemStock == 0 || ViewBag.ItemStock < 0)
                        { <div class="InStockContainer" style="background:red; color:white;">
                            @if (ViewBag.ItemStock.isAllowBackOrder ?? false) // back ordering allowed
                            {
                                <label>@Resources.MyResource.lblBackOrder</label>
                            }
                            else
                            {
                                <label>@Resources.MyResource.lblItemOutOfStock</label>
                            }
                        </div>
                        }
                        else
                        {
                            <div class="InStockContainer" style="background:#f3f3f3; color:black;">
                                <label>@Resources.MyResource.lblItemInStock @ViewBag.InStock</label>
                            </div>
                        }


                    }

                    <div class="clearBoth">
                        &nbsp;
                    </div>
                    <div class="float_right">

                        <asp:button id="btnAddToCart" onclientclick="return CheckSpelling();"
                                    cssclass="add_to_cart_btn rounded_corners5 MTopM10" onclick="btnAddToCart_Click"
                                    text="ADD TO CART" /><br />

                    </div>
                    <div class="clearBoth">
                        &nbsp;
                    </div>

                    <div class="clearBoth">
                        &nbsp;
                    </div>
                    <div id="priceToggle" onclick="MatrixToggle();" style="cursor: pointer; color: #b6d682;
                            font-size: 13px; float: left; margin-top: 15px; margin-bottom: 10px;">
                        <label id="toggleHeading">Show price table</label>
                    </div>
                    <div class="clearBoth">
                        &nbsp;
                    </div>
                    <div id="matrixHeadingsContainer" class="" style="display: none;">
                        @if (Model.IsQtyRanged == true)
                        {
                            <div class="confirm_design divtxtalgn MLR">
                                <label>@Resources.MyResource.lblQuantity</label>
                            </div>
                            <br />}
                        <div class="width50p">
                            @if (Model.IsQtyRanged == true)
                            {
                                <div class="Fsize13 divtxtalgn float_left_simple ddwidth50 marginRight" style="margin-left: -40px;">
                                    <label>@Resources.MyResource.lblQtyFrom</label>
                                </div>
                                <div class="Fsize13 divtxtalgn float_left_simple">

                                    <label>@Resources.MyResource.lblQtyTo</label>
                                </div>
                            }
                            else
                            {
                                <div class="Fsize13 divtxtalgn_CS width70pixel float_left_simple">
                                    <label>@Resources.MyResource.lblQuantity</label>
                                </div>
                            }

                            <div class="divtxtalgn_CS Width40Px float_right" style="visibility:hidden;">
                                <label id="LtrlCurrencySymbol"></label>
                            </div>
                            <div class="clearBoth">
                                &nbsp;
                            </div>
                        </div>
                    </div>
                    <div class="clearBoth">
                        &nbsp;
                    </div>
                    <div id="priceMatrixContainer" style="" class="spacerbottom cntlndngtbl">

                        @foreach (var matrix in Model.ItemPriceMatrices as List<MPC.Models.DomainModels.ItemPriceMatrix>)
                        {
                            if (PriceBackgroundCount % 2 == 0)
                            {
                                priceMatrixBackground = "lightgray";
                            }
                            else
                            {
                                priceMatrixBackground = "white";
                            }
                            PriceBackgroundCount++;
                                <div class="@priceMatrixBackground">
                                    <div class="divfloat WhtBakg">
                                        <input type="hidden" id="txtHiddenPriceMatrixID" class="AccessPriceInScript" value='@matrix.PriceMatrixId' />

                                    </div>
                                    @if (Model.IsQtyRanged == true)
                                    {
                                        <div id="QtyRangeFrom" class="LandingPageQty divQNum">
                                            @matrix.QtyRangeFrom
                                        </div>
                                        <div id="QtyRangeTo" class="LandingPageQty divQNum">
                                            @matrix.QtyRangeTo
                                        </div>
                                    }
                                    else
                                    {
                                        <div id="Quantity" class="LandingPageQty divQNum">
                                            @matrix.Quantity
                                        </div>
                                    }
                                    <div id="matrixItemColumn1" class="mattPriceMatrixColumn tblBorderTdWidth extra_pricing divtxtflt">
                                        <span id='1_PriceMatrixID_@matrix.PriceMatrixId' title='@MPC.Webstore.Common.Utils.FormatValueToTwoDecimal(matrix.PricePaperType1.ToString())'>
                                            <label id="lblMatt">@ViewBag.Currency @MPC.Webstore.Common.Utils.FormatValueToTwoDecimal(matrix.PricePaperType1.ToString()) </label>


                                        </span>
                                    </div>
                                    <div id="matrixItemColumn2" class="glossyPriceMatrixColumn tblBorderTdWidth extra_pricing divtxtflt">
                                        <span id='2_PriceMatrixID_@matrix.PriceMatrixId' title='@matrix.PricePaperType2'>
                                            <label id="lblGlossy">@ViewBag.Currency @MPC.Webstore.Common.Utils.FormatValueToTwoDecimal(matrix.PricePaperType2.ToString())</label>

                                        </span>
                                    </div>
                                    <div id="matrixItemColumn3" class="premiumMattPriceMatrixColumn tblBorderTdWidth extra_pricing divtxtflt">
                                        <span id='3_PriceMatrixID_@matrix.PriceMatrixId' title='@matrix.PricePaperType3'>
                                            <label id="lblPremiumMatt">@ViewBag.Currency + @MPC.Webstore.Common.Utils.FormatValueToTwoDecimal(matrix.PricePaperType3.ToString())</label>


                                        </span>
                                    </div>
                                    <div id="matrixItemColumn4" class="Stock4PriceMatrixColumn tblBorderTdWidth extra_pricing divtxtflt">
                                        <span id='4_PriceMatrixID_@matrix.PriceMatrixId' title='@matrix.PriceStockType4'>
                                            <label id="lblForthStock">@ViewBag.Currency @MPC.Webstore.Common.Utils.FormatValueToTwoDecimal(matrix.PriceStockType4.ToString())</label>

                                        </span>
                                    </div>
                                    <div id="matrixItemColumn5" class="Stock5PriceMatrixColumn tblBorderTdWidth extra_pricing divtxtflt">
                                        <span id='5_PriceMatrixID_@matrix.PriceMatrixId' title='@matrix.PriceStockType5'>
                                            <label id="lblFifthStock">@ViewBag.Currency @MPC.Webstore.Common.Utils.FormatValueToTwoDecimal(matrix.PriceStockType5.ToString())</label>
                                            <label id="lblFifthStockDiscountedPrice" class="custom_colorTS" style="display:none;">@matrix.PriceStockType5</label>

                                        </span>
                                    </div>
                                    <div id="matrixItemColumn6" class="Stock6PriceMatrixColumn tblBorderTdWidth extra_pricing divtxtflt">
                                        <span id='6_PriceMatrixID_@matrix.PriceMatrixId' title='@matrix.PriceStockType6'>
                                            <label id="lblSixthStock">@ViewBag.Currency @MPC.Webstore.Common.Utils.FormatValueToTwoDecimal(matrix.PriceStockType6.ToString())</label>

                                        </span>
                                    </div>
                                    <div id="matrixItemColumn7" class="Stock7PriceMatrixColumn tblBorderTdWidth extra_pricing divtxtflt">
                                        <span id='7_PriceMatrixID_@matrix.PriceMatrixId' title='@matrix.PriceStockType7'>
                                            <label id="lblSevenStock">@ViewBag.Currency + @MPC.Webstore.Common.Utils.FormatValueToTwoDecimal(matrix.PriceStockType7.ToString())</label>

                                        </span>
                                    </div>
                                    <div id="matrixItemColumn8" class="Stock8PriceMatrixColumn tblBorderTdWidth extra_pricing divtxtflt">
                                        <span id='8_PriceMatrixID_@matrix.PriceMatrixId' title='@matrix.PriceStockType8'>
                                            <label id="lblEightStock">@ViewBag.Currency @MPC.Webstore.Common.Utils.FormatValueToTwoDecimal(matrix.PriceStockType8.ToString())</label>

                                        </span>
                                    </div>
                                    <div id="matrixItemColumn9" class="Stock9PriceMatrixColumn tblBorderTdWidth extra_pricing divtxtflt">
                                        <span id='9_PriceMatrixID_@matrix.PriceMatrixId' title='@matrix.PriceStockType9'>
                                            <label id="lblNinthStock">@ViewBag.Currency @MPC.Webstore.Common.Utils.FormatValueToTwoDecimal(matrix.PriceStockType9.ToString())</label>

                                        </span>
                                    </div>
                                    <div id="matrixItemColumn10" class="Stock10PriceMatrixColumn tblBorderTdWidth extra_pricing divtxtflt">
                                        <span id='10_PriceMatrixID_@matrix.PriceMatrixId' title='@matrix.PriceStockType10'>
                                            <label id="lblTenthStock">@ViewBag.Currency @MPC.Webstore.Common.Utils.FormatValueToTwoDecimal(matrix.PriceStockType10.ToString())</label>

                                        </span>
                                    </div>
                                    <div id="matrixItemColumn11" class="Stock11PriceMatrixColumn tblBorderTdWidth extra_pricing divtxtflt">
                                        <span id='11_PriceMatrixID_@matrix.PriceMatrixId' title='@matrix.PriceStockType11'>
                                            <label id="lblElevenStock">@ViewBag.Currency @MPC.Webstore.Common.Utils.FormatValueToTwoDecimal(matrix.PriceStockType11.ToString())</label>

                                        </span>
                                    </div>
                                    <div style="clear: both;">
                                    </div>
                                </div>
                        }
                </div>
            </div>
        </div>
        <div class=" ProductDetailGrayBoxLeftLP rounded_corners float_right ">
            <div style="background: white; padding: 10px; text-align: left;" class="rounded_corners">
                <div class="boxCatDes">
                    <div class="mrginBtm">
                        <label class="marginall5 ProductDetailH2">Specifications</label>
                    </div>
                    <label class="marginall5">Category Code</label>
                    <br />
                    <p class="marginall5" style="width: 243px;">
                        <label>@Model.WebDescription</label>
                    </p>
                    <br />
                    <div class="marginall5 ProductDetailRefOptions">
                        <ul class="ProductDetailRefOptionsUL">
                            @*@foreach (var extra in BulletedListExtras)
                                {*@
                            <li></li>
                            @*}*@
                        </ul>
                    </div>
                </div>
                <div class="box_prodPrice">
                    <div id="PriceCircle" class="blue_cicle_container">
                        <div class="productNewClasscircle">
                            <div class="all_padding3">
                                <div class="paddingTop2px">
                                    &nbsp;
                                </div>
                                <asp:literal id="Literal1" text="FROM"></asp:literal>
                                <br />
                                <label style="font-size:16px;">MinPrice</label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class=" clear">
                </div>
            </div>
        </div>
    </div>
    <div class="clearBoth">
        &nbsp;
    </div>
    <input type="hidden" value=@Html.Raw(Json.Encode(ViewBag.JasonPriceMatrix)) class="JsonPriceMatrixValue" />
    <input type="hidden" value=@Html.Raw(Json.Encode(ViewBag.JsonAddonCostCentre)) class="JsonAddonCostCentreValue" />
</div>
<br />
</div>
@section scripts {
    <script src="~/Scripts/PopUp.js"></script>
    <script>

        var isRanged = "@Model.IsQtyRanged.Value.ToString()" == "False" ? 0 : 1;
        var TotalItemPrice = 0;

    $(document).ready(function () {


        $('input:radio[name=StockPaper]:checked').next().removeClass('grayRadiantbtn').addClass('OrangeGradiantbtn');
        $('input:radio[name=StockPaper]:checked').next().css("background-color", "white");

        hideShowPriceColumns($('input:radio[name=StockPaper]:checked').attr("class"));

        MatrixToggle();
        if (isRanged) {
            CalculatePriceBaseOnRangedQuantity();
        } else {
            CalculatePriceBaseOnSelectedQuantity($(".dropdownQtyListClass").find(":selected").index());
        }

        SetAddOnsPrice();
    });

    $("#priceToggle").click(function () {
        $('#priceMatrixContainer').slideToggle();

    });

    function MatrixToggle() {


        var hideMessage = "Hide Price Table";//Resources.MyResource.HidePriceMatrix;
        var showMessage = "Show Price Table"; //Resources.MyResource.ShowPriceMatrix;
        if ($('#toggleHeading').text() == hideMessage) {
            $('#toggleHeading').text(showMessage);
            $('#ToogleTable').css("margin-bottom", "0px");

            $('#matrixHeadingsContainer').css("display", "none");
        }
        else {
            $('#toggleHeading').text(hideMessage);
            $('#ToogleTable').css("margin-bottom", "10px");
            $('#matrixHeadingsContainer').css("display", "block");
        }
    }

    function CalculatePriceBaseOnRangedQuantity() {

        var QuantityOrdered = $("#rangedQuantityOrdered").val();

        if (isNaN(QuantityOrdered) === true) {

            ShowPopUp("Message", "Please enter numeric characters only.");
            return false;
        }
        else if (QuantityOrdered == 0) {
            ShowPopUp("Message", "Please enter correct quantity.");
            return false;
        }
        else if (QuantityOrdered.toString().indexOf(".") != -1) {
            ShowPopUp("Message", "Please enter correct quantity.");
            return false;
        }
        else if (QuantityOrdered < 0) {
            ShowPopUp("Message", "Please enter correct quantity.");
            return false;
        }

        var ObjectItemStock = "@ViewBag.ItemStock";

        if(ObjectItemStock == "")
        {
            if(ObjectItemStock.InStock > 0)
            {
                if(ObjectItemStock.isAllowBackOrder == false)
                {
                    var StockLevel = parseInt(ObjectItemStock.InStock);
                    if (QuantityOrdered > StockLevel) {
                        ShowPopUp('Message', "You cannot place order because the selected quantity is more than stock.");
                        return false;
                    }
                }
            }
        }

        var selectedStockType = StockNo();

        var Price = null;
        var qtyJsonData = null;
        var ActualqtyJsonData = null;
        var count = $(JsonData).length;
        if (QuantityOrdered != "") {
            var JsonData = jQuery.parseJSON($('.JsonPriceMatrixValue').val());
            var JsonFirstObject = $(JsonData)[0];
            var JsonLastObject = "";
            var OrderedJasonObject = "";
            for (var i = count - 1; i < $(JsonData).length; i++) {
                JsonLastObject = $(JsonData)[i];
            }

            if (QuantityOrdered < JsonFirstObject.QtyRangeFrom || QuantityOrdered > JsonLastObject.QtyRangeTo) {
                ShowPopUp('Message', "Your quantity exceeds the normal amount, please contact us for a special price.");
                return false;
            } else {
                count = $(JsonData).length;

                for (var i=0; i<count; i++) {

                    if (QuantityOrdered >= $(JsonData)[i].QtyRangeFrom && QuantityOrdered <= $(JsonData)[i].QtyRangeTo) {
                      
                        OrderedJasonObject = $(JsonData)[i];
                        break;
                    }
                   
                }

                if (OrderedJasonObject != null) {

                    selectedStockType = selectedStockType + '_PriceMatrixID_' + OrderedJasonObject.ItemID;


                    Price = parseFloat($('#' + selectedStockType).attr("title"));



                    Price = Price * QuantityOrdered;


                    this.displayTotalPrice(Price, calculateAddOns());
                }
            }
        }
        else {
            ShowPopUp("Message", "Please enter quantity.");
            return false;
        }
    }

    function CalculatePriceBaseOnSelectedQuantity(selectedQuantityIndex) {

        var selectedStockNo = StockNo();

        var JsonData = jQuery.parseJSON($('.JsonPriceMatrixValue').val());
        JsonData = JsonData[selectedQuantityIndex];
        selectedStockNo = selectedStockNo + '_PriceMatrixID_' + JsonData.ItemID.toString();

        var price = "";

        price = parseFloat($('#' + selectedStockNo).attr("title"));



        this.displayTotalPrice(price, calculateAddOns());
    }
    
    $(".dropdownQtyListClass").change(function () {

        CalculatePriceBaseOnSelectedQuantity($(this).find(":selected").index());
    });

    function SelectStock(classname) {

        $('input:radio[class=' + classname + ']').prop('checked', true);

        if ($('input:radio[class=' + classname + ']').is(':checked')) {

            $('input:radio[class=' + classname + ']').next().removeClass('grayRadiantbtn').addClass('OrangeGradiantbtn');

            var name = $('input:radio[class=' + classname + ']').attr("name");

            $('input:radio[name=' + name + ']').each(function () {
                if ($(this).is(':checked')) {
                    $("#lblStock").text($(this).next().text());
                    $(this).parent().parent().parent().parent().addClass('white_background');
                    $(this).parent().parent().parent().parent().css("background-color", "white");
                } else {
                    $(this).next().removeClass('OrangeGradiantbtn').addClass('grayRadiantbtn');
                }
            });
            hideShowPriceColumns(classname);

        }


        if (isRanged) {

        } else {
            CalculatePriceBaseOnSelectedQuantity($(".dropdownQtyListClass").find(":selected").index());
        }

    }



    function hideShowPriceColumns(selectedPaperType) {

        var mattClomuns = $(".mattPriceMatrixColumn");
        var glossyColumns = $(".glossyPriceMatrixColumn");
        var premimumMattColumns = $(".premiumMattPriceMatrixColumn");
        var forthColumn = $(".Stock4PriceMatrixColumn");
        var fifthColumn = $(".Stock5PriceMatrixColumn");
        var SixColumn = $(".Stock6PriceMatrixColumn");
        var SevenColumn = $(".Stock7PriceMatrixColumn");
        var eightColumn = $(".Stock8PriceMatrixColumn");
        var nineColumn = $(".Stock9PriceMatrixColumn");
        var tenthColumn = $(".Stock10PriceMatrixColumn");
        var elevenColumn = $(".Stock11PriceMatrixColumn");

        hideColumns(mattClomuns);
        hideColumns(glossyColumns);
        hideColumns(premimumMattColumns);
        hideColumns(forthColumn);
        hideColumns(fifthColumn);
        hideColumns(SixColumn);
        hideColumns(SevenColumn);
        hideColumns(eightColumn);
        hideColumns(nineColumn);
        hideColumns(tenthColumn);
        hideColumns(elevenColumn);

        if (selectedPaperType == 'rbStockType1') {
            showColumns(mattClomuns);
        }
        else if (selectedPaperType == 'rbStockType2') {
            showColumns(glossyColumns);
        }
        else if (selectedPaperType == 'rbStockType3') {
            showColumns(premimumMattColumns);
        }
        else if (selectedPaperType == 'rbStockType4') {
            showColumns(forthColumn);
        }
        else if (selectedPaperType == 'rbStockType5') {
            showColumns(fifthColumn);
        }
        else if (selectedPaperType == 'rbStockType6') {
            showColumns(SixColumn);
        }
        else if (selectedPaperType == 'rbStockType7') {
            showColumns(SevenColumn);
        }
        else if (selectedPaperType == 'rbStockType8') {
            showColumns(eightColumn);
        }
        else if (selectedPaperType == 'rbStockType9') {
            showColumns(nineColumn);
        }
        else if (selectedPaperType == 'rbStockType10') {
            showColumns(tenthColumn);
        }
        else if (selectedPaperType == 'rbStockType11') {
            showColumns(elevenColumn);
        }
    }

    function showColumns(columnsListObj) {

        $(columnsListObj).css("display", "block");
    }


    function hideColumns(columnsListObj) {
        $(columnsListObj).css("display", "none");
    }

    function displayTotalPrice(productPrice, addOnPrice) {
        
        var productPriceTotal = parseFloat(productPrice);
        var addonPriceTotal = parseFloat(addOnPrice);

        TotalItemPrice = productPrice;

        var culturee = 1;

        var IsInt = "";
        IsInt = productPrice;

        if (IsInt == 0) {
        } else {
            IsInt = IsInt.toString();
            var indexOfDot = IsInt.indexOf(".");
            var indexOfComma = IsInt.indexOf(",") == -1

            if (indexOfDot == -1 || indexOfComma == -1) {

                IsInt = -1;
            } else {
                IsInt = 1;
            }

        }

        productPriceTotal = productPriceTotal + addonPriceTotal;
        productPriceTotal = productPriceTotal.toFixed(2);

        var CorpUser = 0;//'<%=IsUsrCorp %>';
        var Reslt = 1;//'<%=PricingShown %>';
        var CorpPricing = 1;//'<%=isCorporatePricingshown %>';
        if (CorpUser == 1) {
            if (CorpPricing == 1) {
                if (IsInt == -1) {
                    $('#lblGrossTotal').text(@ViewBag.Currency +productPriceTotal);
                } else {
                    $('#lblGrossTotal').text(@ViewBag.Currency +productPriceTotal);
                }
            }
            else {
                $('#lblGrossTotal').css("display", "none");
            }
        } else {
            if (Reslt == 1) {
                if (culturee == 1) {

                    $('#lblGrossTotal').text(@ViewBag.Currency +productPriceTotal);


                } else {
                    if (IsCalculateVat > 0) {
                    } else {
                        if (isNaN(total) === true) {
                            total = total.replace(",", ".");
                        }
                    }
                    if (IsInt == -1) {

                        $('#lblGrossTotal').text(@ViewBag.Currency +productPriceTotal);
                    } else {
                        $('#lblGrossTotal').text(@ViewBag.Currency +productPriceTotal);
                    }

                }

            }
            else {
                $('#lblGrossTotal').css("display", "none");
            }
        }
    }

    // returns the the selected stock no
    function StockNo() {
        var stockName = $('input:radio[name=StockPaper]:checked').attr("class");
        if (stockName == 'rbStockType1') {
            return '1';
        }
        else if (stockName == 'rbStockType2') {
            return '2';
        }
        else if (stockName == 'rbStockType3') {
            return '3';
        }
        else if (stockName == 'rbStockType4') {
            return '4';
        }
        else if (stockName == 'rbStockType5') {
            return '5';
        }
        else if (stockName == 'rbStockType6') {
            return '6';
        }
        else if (stockName == 'rbStockType7') {
            return '7';
        }
        else if (stockName == 'rbStockType8') {
            return '8';
        }
        else if (stockName == 'rbStockType9') {
            return '9';
        }
        else if (stockName == 'rbStockType10') {
            return '10';
        }
        else if (stockName == 'rbStockType11') {
            return '11';
        }
    }

    function calculateAddOns() {
       
        var checkedPriceTotal = 0;

        var checkBoxJasonData = null;

        var itemsList = '';

        var addOnJasonData = jQuery.parseJSON($('.JsonAddonCostCentreValue').val());
       
        $(".checkBoxAdOnPriceCheckBox").each(function (i, val) {

          //  $(this).css("height", "18px");
           // $(this).css("width", "21px");
            
            // $(this).css("opacity", "0");
            alert($(val).is(':checked'));
            if ($(val).is(':checked')) {
                //$(this).parent().css("background-image", "url('../../images/tick-box.png')");
              
                if (addOnJasonData != null) {

                    for (var i = 0; i < $(addOnJasonData).length; i++) {
                        if ($(addOnJasonData)[i].Id == $(val).attr('id')) {
                            checkBoxJasonData = $(addOnJasonData)[i];
                            break;
                        }
                    }
                    
                    itemsList = itemsList + "<br/> " + $(val).next().text();

                    // check the costcenter if its type is fixed then we will take its setup cost
                    //if it is per quantity type then we will (qty * priceperunitqty) + setupcost

                    var actualPrice = checkBoxJasonData.ActualPrice;
                    
                    if (checkBoxJasonData.Type == 2) {

                        if (isRanged) {
                            var quantityOrdered = $("#rangedQuantityOrdered").val();
                            actualPrice = (quantityOrdered * actualPrice) + checkBoxJasonData.SetupCost;
                            if (actualPrice < checkBoxJasonData.MinimumCost && checkBoxJasonData.MinimumCost != 0) {
                                actualPrice = checkBoxJasonData.MinimumCost;
                            }
                        }
                        else {
                            var quantityOrdered = $(".dropdownQtyListClass").find(":selected").val();
                            
                            actualPrice = (quantityOrdered * actualPrice) + checkBoxJasonData.SetupCost;
                            if (actualPrice < checkBoxJasonData.MinimumCost && checkBoxJasonData.MinimumCost != 0) {
                                actualPrice = checkBoxJasonData.MinimumCost;

                            }
                        }

                    }
                    checkedPriceTotal = checkedPriceTotal + parseFloat(actualPrice); //Gets Actual non discounted Price
                    
                }
            } else {
                $(this).parent().css("background-image", "url('../../images/square-final.png')");
            }
            checkBoxJasonData = null;
        });

        $('#lblExtra').html(itemsList);
        
        return checkedPriceTotal;
    }



    $('input[name=addOnChecks]').on('change', function (e) {

        displayTotalPrice(TotalItemPrice, calculateAddOns());
    });

    function SetAddOnsPrice() {

        var checkBoxJasonData = null;
      
        var itemsList = '';

        var orderedQuantity = $(".dropdownQtyListClass").find(":selected").val();
        if (isRanged) {
            orderedQuantity = $("#rangedQuantityOrdered").val();
          
        }

       

        var addOnJasonData = jQuery.parseJSON($('.JsonAddonCostCentreValue').val());

        $(".checkBoxAdOnPriceCheckBox").each(function (i, val) {

            if (addOnJasonData != null) {

                for (var i = 0; i < $(addOnJasonData).length; i++) {
                    if ($(addOnJasonData)[i].Id == $(val).attr('id')) {
                        checkBoxJasonData = $(addOnJasonData)[i];
                        break;
                    }
                }

                itemsList = itemsList + ", " + $(this).parent().next().text();

                // check the costcenter if its type is fixed then we will take its setup cost
                //if it is per quantity type then we will (qty * priceperunitqty) + setupcost
                var actualPrice = checkBoxJasonData.ActualPrice;

                if (checkBoxJasonData.Type == 2) {

                    actualPrice = (orderedQuantity * actualPrice) + checkBoxJasonData.SetupCost;

                    if (actualPrice < checkBoxJasonData.MinimumCost && checkBoxJasonData.MinimumCost != 0) {
                        actualPrice = checkBoxJasonData.MinimumCost;

                    }

                    $(val).next().next().children(':first').html((actualPrice).toFixed(2));
                }
            }
        });
    }

</script>
}