@model MPC.Models.Common.ProductItem
@using MPC.Models.Common;
@using MPC.Webstore.Common;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<div class="container content_area">
    <div class="left_right_padding">
        @*<uc1:BreadCrumbMenu ID="BreadCumbMenuCategory" runat="server" />*@
        <div class="signin_heading_div float_left_simple">
            <img id="imgLght" src="~/images/artwork_light_icons.png"
                 style="width:40px;" />
        </div>
        <div class="signin_heading_div float_left_simple" style="margin-top: 3px;">
            <label id="lblInqueryBreif" style="font-size: 22px;">@ViewBag.LabelInquiryBrief</label>
        </div>
        <div class="clearBoth">
            &nbsp;
        </div>
        <div class="MB_MsgSm">
            <label id="lblSummeryMesg">
                @Model.ProductSpecification
        </label>
    </div>
    <div class="clearBoth">
        &nbsp;
    </div>

   @if (ViewBag.WlSumMesg != null)
   { 
        <div id="welcomeSummeryMEsg" class="LGBC rounded_corners paddingLeft5px Mleft10"
             style="padding: 5px;">
            <div class="white_background rounded_corners MB_P5o">
                <label id="WlSumMesg" class="MB_ThksMsg">@ViewBag.WlSumMesg</label>
                <a class="spanRetURl" href="/Home/Index" id="lnk_ReturnHome">@Html.Raw(Html.GetKeyValueFromResourceFile("lnk_ReturnHome", UserCookieManager.StoreId))</a>
            </div>
        </div>
    }
    @using (Html.BeginForm())
    {
        <input type="hidden" id="hfInqueryMesg" name="hfInqueryMesg" />
        if (ViewBag.IsSubmitSuccessfully == false)
        { 
                <div id="LeftPanel" class="float_left_simple MB_Width755">

            @{
        int QNo = 0; //QNo
                int HFGroupCount = 1;
                string answersCont = string.Empty;
                string hfHaveNoAns = string.Empty;
                string divID = string.Empty;
                if (ViewData["QuestionsList"] != null)
                {
                        foreach (var question in ViewData["QuestionsList"] as List<MPC.Models.DomainModels.ProductMarketBriefQuestion>)
                        {

                            List<MPC.Models.DomainModels.ProductMarketBriefAnswer> answers = ViewData["Answers"] as List<MPC.Models.DomainModels.ProductMarketBriefAnswer>;
                            answers = answers.Where(a => a.MarketBriefQuestionId == question.MarketBriefQuestionId).ToList();
                            QNo++;

                               string groupName = QNo + "radioGroup";
                               string hfTotalGroups = string.Empty;


                               divID = "radio" + QNo;


                                var AnsCOnt = "AnsCont" + QNo;
            <div class="float_left_simple LGBC rounded_corners paddingLeft5px Mleft10 MB_MainCont">
                <div class="white_background rounded_corners MB_InnerCont">

                    <div id="questionCont" class="MB_QtnsCont">
                        @QNo.@question.QuestionDetail
                    </div>

                    @{
                                            if (question.IsMultipleSelection == true)
                                            {

                                        <div id="answersCont" class="MB_AnsCont">
                                            <div id="@divID" class=@AnsCOnt data-type="1">
                                                @{
                                                int Anscount = 1;

                                                foreach (var i in answers)
                                                {
                                                    string radiobtnID = "Q" + QNo + "RadioBtn" + Anscount;
                                                    string className = "Q" + QNo + "RadioBtn" + Anscount;


                                                    <div class=float_left_simple style="height:40px;"> <input type=checkbox id="@i.MarketBriefAnswerId" class=@className name=@groupName style="position:absolute;opacity:0;" /><label for=radio1 class=grayRadiantbtn onclick=TickCheckBox('@radiobtnID');> @i.AnswerDetail </label> </div>
                                                    Anscount += 1;
                                                }
                                                }
                                            </div>

                                        </div>
                                            }
                                            else
                                            {
                                        <div id="answersCont" class="MB_AnsCont">
                                            <div id="@divID" class=@AnsCOnt data-type="2">
                                                @{
                                                int Anscount = 1;

                                                foreach (var i in answers)
                                                {
                                                    var radiobtnID = "Q" + QNo + "RadioBtn" + Anscount;
                                                    string className = "Q" + QNo + "RadioBtn" + Anscount;


                                                    <div class=float_left_simple style="height:40px;"> <input type=radio id="@i.MarketBriefAnswerId" class=@className name=@groupName style=" position:absolute;opacity:0;" /><label for=radio1 class=grayRadiantbtn onclick=TickRadio('@radiobtnID');>@i.AnswerDetail</label> </div>
                                                    Anscount += 1;
                                                }
                                                }
                                            </div>

                                        </div>
                                            }

                                        if (answers.Count > 0 & answers != null)
                                        {

                                        <input type="hidden" id="hfGroupsCount" value="@HFGroupCount" />
                                            HFGroupCount++;

                                       

                                            if (!string.IsNullOrEmpty(hfTotalGroups))
                                            {
                                                hfTotalGroups = hfTotalGroups + "," + groupName;
                                            }
                                            else
                                            {
                                                hfTotalGroups = groupName;
                                            }
                                        <input type="hidden" id="hfTotalGroups" value="@hfTotalGroups" />

                                        }
                                        if (!string.IsNullOrEmpty(hfHaveNoAns))
                                        {
                                            hfHaveNoAns = hfHaveNoAns + "," + AnsCOnt;
                                        }
                                        else
                                        {
                                            hfHaveNoAns = AnsCOnt;
                                        }
                                         

                    }

                    <div class="clearBoth">
                        &nbsp;
                    </div>
                    <div class="MB_AddInfoCOnt">
                        <label id="lbl_AdditionalInformation" class="MB_AddInfoColor">@Html.Raw(Html.GetKeyValueFromResourceFile("lbl_AdditionalInformation", UserCookieManager.StoreId))</label>
                        <textarea id="txtAddAns" class="rounded_corners MB_txtbxInfo" cols="10" rows="3"></textarea>
                    </div>

                </div>
            </div>
                        }
                      
                        <input id="hfHaveNoAns" type="hidden" value="@hfHaveNoAns" />

                }
            <div class="clearBoth">
                &nbsp;
            </div>
            if(Model.AllowBriefAttachments)
            {
            <div id="MBUploadContainerDisplay" class="float_left_simple LGBC rounded_corners paddingLeft5px Mleft10 MB_MainCont">

                <div class="white_background rounded_corners MB_InnerCont">
                    <div id="lbl_UploadFiles" class="MB_QtnsCont">
                       @Html.Raw(Html.GetKeyValueFromResourceFile("lbl_UploadFiles", UserCookieManager.StoreId))
                    </div>
                    <div class="MB_UploadContainer">
                        <label id="lbl_UploadFileGudelines" class="Fsize17">@Html.Raw(Html.GetKeyValueFromResourceFile("lbl_UploadFileGudelines", UserCookieManager.StoreId))</label><br />
                        <br />
                        <div class="MB_GLContainer">
                            <label id="lbl_UploadFileGudelines_Format">@Html.Raw(Html.GetKeyValueFromResourceFile("lbl_UploadFileGudelines_Format", UserCookieManager.StoreId))</label>
                            <label id="lbl_UploadFileGudelines_Format_Types">@Html.Raw(Html.GetKeyValueFromResourceFile("lbl_UploadFileGudelines_Format_Types", UserCookieManager.StoreId))</label>
                        </div>
                        <div class="MB_GLContainer">
                            <label id="lbl_UploadFileGuideLines_FileSize">@Html.Raw(Html.GetKeyValueFromResourceFile("lbl_UploadFileGuideLines_FileSize", UserCookieManager.StoreId))</label>
                            <label id="lbl_UploadFileGuideLines_FileSize_Bytes">@Html.Raw(Html.GetKeyValueFromResourceFile("lbl_UploadFileGuideLines_FileSize_Bytes", UserCookieManager.StoreId))</label>
                        </div>
                    </div>
                    <div class="MB_fileUploadContainer">
                        <asp:FileUpload ID="fuImageUpload" runat="server" CssClass="file_upload_box185" />
                        <input type="file" id="fuImageUpload" class="file_upload_box185" />
                    </div>
                </div>
            </div>
            }
            <div class="clearBoth">
                &nbsp;
            </div>
            }
        </div>
                 <div id="RightPanel" class="MB_RightCont float_left_simple">
                     <img id="CatImge" class="MB_ProductImage float_left_simple" src='@Html.GetAppBasePath()@Model.ThumbnailPath' />
            <div class="float_left_simple LGBC rounded_corners paddingLeft5px Mleft10 MB_InnerRightCont">
                <div class="white_background rounded_corners MB_RightInnerPnl">
                    <div class="MB_GrayBack">
                        <label id="lbl_Reply_Message" class="Fsize17">@Html.Raw(Html.GetKeyValueFromResourceFile("lbl_Reply_Message", UserCookieManager.StoreId))</label>
                        <div class="left_align">
                            <label id="lbl_Email" class="MB_EMailtxtColor">@Html.Raw(Html.GetKeyValueFromResourceFile("lbl_Email", UserCookieManager.StoreId))</label>
                        </div>
                        <label id="lblEMailAdd">@ViewBag.Email</label><br />
                        <div style="margin-top: 10px; text-align: left;">
                            <label id="lblTelText" class="MB_EMailtxtColor">Tel:</label>
                        </div>
                        <label id="lblPhoneNo">@ViewBag.Phone</label><br />
                        <a id="lbl_Change"  href="#" style="float: right; cursor: pointer; color:#73a8ac; clear: both; display:none;">@Html.Raw(Html.GetKeyValueFromResourceFile("lbl_Change", UserCookieManager.StoreId))</a>
                        <div class="clearBoth">
                            &nbsp;
                        </div>
                    </div>
                    <div style="margin: 5px; margin-top: 15px;">
                        <button id="SendINqBtn" value="Send" class="MB_SendINqBtn rounded_corners5"
                                onclick="return GetAllinputElementIDS();" />
                    </div>
                </div>
            </div>
            <div class="clearBoth">
                &nbsp;
            </div>
        </div>
        }
     }
    <div class="clearBoth">
        &nbsp;
    </div>
</div>
</div>

@section scripts {
<script src="~/Scripts/PopUp.js"></script>

    <script>

        $(document).ready(function () {
            CreateMultipleUpload();
          
          
           
            
           
        });

        function CreateMultipleUpload() {
            //set up the file upload
            $("#fuImageUpload").MultiFile(
              {
                  max: 4,
                  accept: 'jpg,png,pdf,gif,jpeg',
                  afterFileSelect: function (element, value, master_element) {

                  },
                  afterFileRemove: function (element, value, master_element) {

                  }
              });
        }

        function ShowUploader() {
            $("#fuImageUpload").click();
        }

        function GetAllinputElementIDS() {

            var selectedradioBtnsCount = 0;
            var groupCount = $("#hfGroupsCount").val();
            var txtVal = "";
            var idList = "";
            var AdditionalAnsList = "";

            var AllAnswers = $("#hfHaveNoAns").val();
            
            if (AllAnswers != '') {
                var EachAnswer = AllAnswers.split(',');
               
                $.each(EachAnswer, function (i, element) {
                   
                    var TypeOfAns = $('.' + element + '').attr("data-Type");
                  
                    if ($('.' + element + '').children().html() == null) {
                        
                        if (AdditionalAnsList == "") {
                            AdditionalAnsList = AdditionalAnsList + "Q" + $('.' + element + '').parent().prev().text() + " \n " + "Additional Information :  " + $('.' + element + '').parent().next().next().children().next().val();
                        } else {
                            AdditionalAnsList = AdditionalAnsList + "|" + "Q" + $('.' + element + '').parent().prev().text() + " \n " + "Additional Information :  " + $('.' + element + '').parent().next().next().children().next().val();

                        }
                    } else {
                        if (TypeOfAns == 1) { //case of checkbox
                           
                            var isCheckedd = 0;
                            var AnswerList = "";
                            var GroupName = $('.' + element + '').children().children().attr("name");
                           
                            $('input:checkbox[name=' + GroupName + ']').each(function () {
                                if ($(this).is(':checked')) {
                                    if (AnswerList == "") {
                                        AnswerList = $(this).next().text();
                                    } else {
                                        AnswerList = AnswerList + ", " + $(this).next().text();
                                    }
                                    if (isCheckedd == 0) {
                                        isCheckedd = 1;
                                        selectedradioBtnsCount = selectedradioBtnsCount + 1;
                                    }
                                }
                            });
                            if (AdditionalAnsList == "") {
                                AdditionalAnsList = AdditionalAnsList + "Q" + $('.' + element + '').parent().prev().text() + " \n " + "Selected Answer : " + AnswerList + " \n " + "Additional Information :  " + $('.' + element + '').parent().next().next().next().next().next().next().children().next().val();
                            } else {
                                AdditionalAnsList = AdditionalAnsList + "|" + "Q" + $('.' + element + '').parent().prev().text() + " \n " + "Selected Answer : " + AnswerList + " \n " + "Additional Information :  " + $('.' + element + '').parent().next().next().next().next().next().next().children().next().val();
                            }

                        } else { // case of radio
                           
                            $('input[type=radio]').each(function () {
                                if ($(this).is(':checked')) {
                                    var ClassOFSelectedRadio = $(this).parent().parent().attr("class");

                                    if (ClassOFSelectedRadio == element) {
                                        selectedradioBtnsCount = selectedradioBtnsCount + 1;
                                        if (AdditionalAnsList == "") {
                                            AdditionalAnsList = AdditionalAnsList + "Q" + $(this).parent().parent().parent().prev().text() + " \n " + "Selected Answer : " + $(this).next().text() + " \n " + "Additional Information :  " + $(this).parent().parent().parent().next().next().children().next().val();
                                        } else {
                                            AdditionalAnsList = AdditionalAnsList + "|" + "Q" + $(this).parent().parent().parent().prev().text() + " \n " + "Selected Answer : " + $(this).next().text() + " \n " + "Additional Information :  " + $(this).parent().parent().parent().next().next().children().next().val();
                                        }
                                        return;
                                    }
                                }
                            });
                        }
                    }

                });
            }


            if (selectedradioBtnsCount < groupCount) {
                
                ShowPopUp('Message', 'Please select an option in the highlighted questions to submit your inquiry.');
                var AllGroups = $("#hfTotalGroups").val();
              
                var EachGroup = AllGroups.split(',');
                $.each(EachGroup, function (i, element) {

                    var i = 0;
                    var id = "";
                    var SelecedRadioNotHighlighted = $('input[type="radio"][name="' + element + '"]:checked').attr("id");
                    if (SelecedRadioNotHighlighted == undefined) {
                        
                        $('input:radio[name=' + element + ']').each(function () {
                            $(this).parent().parent().parent().parent().removeClass('white_background');
                            $(this).parent().parent().parent().parent().css("background-color", "#ECAAAA");
                        });
                        if (i == 0 & id != "") {

                        }
                    }
                    var SelecedCheckBoxNotHighlighted = $('input[type="checkbox"][name="' + element + '"]:checked').attr("id");
                    if (SelecedCheckBoxNotHighlighted == undefined) {
                     
                        $('input:checkbox[name=' + element + ']').each(function () {
                            $(this).parent().parent().parent().parent().removeClass('white_background');
                            $(this).parent().parent().parent().parent().css("background-color", "#ECAAAA");
                        });
                        if (i == 0 & id != "") {

                        }
                    }
                });
                return false;
            } else {
                
                $("#hfInqueryMesg").val(AdditionalAnsList);

                return true;
            }
        }

        function TickCheckBox(CheckBoxClassName) {

            if ($('input:checkbox[class=' + CheckBoxClassName + ']').is(':checked')) {
              
                $('input:checkbox[class=' + CheckBoxClassName + ']').attr('checked', false);
                $('input:checkbox[class=' + CheckBoxClassName + ']').next().removeClass('OrangeGradiantbtn').addClass('grayRadiantbtn');

            } else {
              
                $('input:checkbox[class=' + CheckBoxClassName + ']').attr('checked', true);
                $('input:checkbox[class=' + CheckBoxClassName + ']').next().removeClass('grayRadiantbtn').addClass('OrangeGradiantbtn');
                $('input:checkbox[class=' + CheckBoxClassName + ']').parent().parent().parent().parent().addClass('white_background');
                $('input:checkbox[class=' + CheckBoxClassName + ']').parent().parent().parent().parent().css("background-color", "white");

            }
        }

        function TickRadio(RadioClassName) {
            
            $('input:radio[class=' + RadioClassName + ']').attr('checked', true);
            if ($('input:radio[class=' + RadioClassName + ']').is(':checked')) {

                $('input:radio[class=' + RadioClassName + ']').next().removeClass('grayRadiantbtn').addClass('OrangeGradiantbtn');

                var name = $('input:radio[class=' + RadioClassName + ']').attr("name");

                $('input:radio[name=' + name + ']').each(function () {
                    if ($(this).is(':checked')) {
                        $(this).parent().parent().parent().parent().addClass('white_background');
                        $(this).parent().parent().parent().parent().css("background-color", "white");
                    } else {
                        $(this).next().removeClass('OrangeGradiantbtn').addClass('grayRadiantbtn');
                    }
                });
            }
        }
    </script>
}
