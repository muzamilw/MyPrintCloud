@model MPC.Models.DomainModels.CompanyContact
@using MPC.Webstore.Common;
@using MPC.Models.Common;
@using System;
@{
    Layout = null;
}

@using (Html.BeginForm())
{
    <style type="text/css">
        input[type="checkbox"] {
            display: none;
            outline: none !important;
            -webkit-transition: background-color;
            -moz-transition: background-color;
            -o-transition: background-color;
            -ms-transition: background-color;
            transition: background-color;
        }

            input[type="checkbox"] + label {
                display: inline-block !important;
                padding: 6px 0 6px 45px;
                line-height: 25px;
                background-image: url("/Content/Images/checkbox_sprite.svg");
                background-image: none,url("/Content/Images/checkbox_sprite.svg");
                background-position: -108px 0;
                background-repeat: no-repeat;
                -webkit-background-size: 143px 143px;
                -moz-background-size: 143px 143px;
                background-size: 143px 143px;
                overflow: visible;
                outline: none;
                -webkit-user-select: none;
                -moz-user-select: none;
                -ms-user-select: none;
                user-select: none;
                cursor: pointer;
                color: #66615b;
                outline: none !important;
            }

                input[type="checkbox"]:hover + label, input[type="checkbox"] + label:hover, input[type="checkbox"]:hover + label:hover {
                    background-position: -72px -36px;
                    color: #403d39;
                }

            input[type="checkbox"]:checked + label {
                background-position: -36px -72px;
                color: #403d39;
                font-weight: normal;
            }

                input[type="checkbox"]:checked:hover + label, input[type="checkbox"]:checked + label:hover, input[type="checkbox"]:checked:hover + label:hover {
                    background-position: 0 -108px;
                    color: #403d39;
                }
    </style>
    <div class="content_area container" id="all-contactDetail-pg">
        <div class="left_right_padding">
            <div class="col-md-12 col-lg-12 col-xs-12">
                <div class=" signin_heading_div float_left_simple ">
                    <label class=" sign_in_heading" id="HistryBtn">
                        @Html.Raw(Html.GetKeyValueFromResourceFile("myprofile", UserCookieManager.WBStoreId, "My Profile"))
                    </label>
                </div>
                <div class="dashBoardRetrunLink dashboard_heading_signin">
                    <div class=" left_align">
                        <h1>
                            <a href="/Dashboard" class="left_align" title="Back to my dashboard" onclick="ShowLoader();">
                                @Html.Raw(Html.GetKeyValueFromResourceFile("BackToDashboardlbl", UserCookieManager.WBStoreId, "Back to my dashboard"))
                            </a>
                        </h1>
                        <div class="clearBoth"></div>
                    </div>
                </div>
                <div class="clearBoth">
                </div>
            </div>

            <div align="center" id="divUserProfile" class="col-md-12 col-lg-12 col-xs-12">


                <div id="messgetodisply" class="rounded_corners messageBoxNew" style="display:none;"></div>


                <div id="ContactDetailsMainContainer" class="white-container-lightgrey-border rounded_corners">
                    <div class="pad20">
                        <div class="headingsAvenior float_left_simple">

                        </div>
                        <div class="cntdashBoardRetrunLink">
                        </div>
                        <br />
                        <div class="cntHalfRightProfile">
                            <div class="smallContctUsAvenior float_left_simple" id="divfname">
                                @*First Name*@
                            </div>
                            <div class="TTL widthAvenior">
                                <span class="error-message EFirstName" style="display: none;">@Html.Raw(Html.GetKeyValueFromResourceFile("cnb", UserCookieManager.WBStoreId, "can't be blank"))</span>
                                @Html.TextBoxFor(model => model.FirstName, new { id = "txtFirstNamee", @class = "newTxtBox", placeholder=Html.Raw(Html.GetKeyValueFromResourceFile("divfname", UserCookieManager.WBStoreId, "First Name")), maxlength = 500, })
                            </div>
                            <div class="clearBoth">
                            </div>
                            <br />
                            <div class="smallContctUsAvenior float_left_simple" id="divlname">
                                @*Last Name*@
                            </div>
                            <div class="TTL widthAvenior">
                                @Html.TextBoxFor(model => model.LastName, new { id = "txtLastNamee", @class = "newTxtBox", placeholder = @Html.Raw(Html.GetKeyValueFromResourceFile("divlname", UserCookieManager.WBStoreId, "Last Name")), maxlength = 500, })
                            </div>

                            <div class="clearBoth">
                            </div>
                            <br />
                            <div class="smallContctUsAvenior float_left_simple" id="divemail">
                                @*Email*@
                            </div>
                            <div class="TTL widthAvenior">
                                @Html.TextBoxFor(model => model.Email, new { id = "txtUserEmaile", @class = "newTxtBox", placeholder = @Html.Raw(Html.GetKeyValueFromResourceFile("ltrlemailtxt", UserCookieManager.WBStoreId, "Email")), maxlength = 500, @readonly = "readonly" })
                            </div>
                            <div class="clearBoth">
                            </div>
                            <br />
                            <div class="smallContctUsAvenior float_left_simple" id="divjobtitle">
                                @*Job Title*@
                            </div>
                            <div class="TTL widthAvenior">
                                @Html.TextBoxFor(model => model.JobTitle, new { id = "txtJobTitle", @class = "newTxtBox", placeholder = @Html.Raw(Html.GetKeyValueFromResourceFile("ltrljobtitle", UserCookieManager.WBStoreId, "JobTitle")), maxlength = 500, })
                            </div>
                            <div class="clearBoth">
                            </div>
                            <br />
                            <div class="smallContctUsAvenior float_left_simple" id="divphonenumber">
                                @*Phone Number*@
                            </div>
                            <div class="TTL widthAvenior">
                                @*<input ID="txtUserPhone1" class="newTxtBox" MaxLength="30"
                                    TabIndex="5" value="@Model.HomeTel1"/>*@
                                @Html.TextBoxFor(model => model.HomeTel1, new
                           {
                               id = "txtUserPhone1",
                               @class = "newTxtBox",
                               placeholder = @Html.Raw(Html.GetKeyValueFromResourceFile("Phone1", UserCookieManager.WBStoreId, "Phone1"))
, maxlength = 500, })
                            </div>
                            <div class="clearBoth">
                            </div>
                            <br />
                            <div class="smallContctUsAvenior float_left_simple" id="divcellnumber">
                                @*Cell Number*@
                            </div>
                            <div class="TTL widthAvenior">
                                @*<input ID="txtUserCellNo" class="newTxtBox" MaxLength="30"
                                    TabIndex="6" value="@Model.Mobile"/>*@
                                @Html.TextBoxFor(model => model.Mobile, new { id = "txtUserCellNo", @class = "newTxtBox", placeholder = Html.Raw(Html.GetKeyValueFromResourceFile("ltrlcellphone", UserCookieManager.WBStoreId, "CellNo")), maxlength = 500, })
                            </div>
                            <div class="clearBoth">
                            </div>
                            <br />
                            <div class="smallContctUsAvenior float_left_simple" id="divfax">
                                @*Fax*@
                            </div>
                            <div class="TTL widthAvenior">
                                @Html.TextBoxFor(model => model.FAX, new { id = "txtUserFax", @class = "newTxtBox", placeholder=Html.Raw(Html.GetKeyValueFromResourceFile("ltrlfax", UserCookieManager.WBStoreId, "Fax")), maxlength = 500, })
                            </div>
                            <div class="clearBoth">
                            </div>
                            <br />
                            @if (UserCookieManager.WEBStoreMode == (int)StoreMode.Retail)
                            {
                                <div id="CompanyNameOfBroker">
                                    <div class="smallContctUsAvenior float_left_simple" id="divcompanyname">
                                        @*Company Name*@
                                    </div>

                                    <div class="TTL widthAvenior">
                                        @*<span class="error-message ECompanyName" style="display: none;">can't be blank</span><br>*@
                                        <input id="txtCompanyName" name="txtCompanyName" class="newTxtBox " maxlength="500" tabindex="8" value="@ViewBag.CompanyName" placeholder="Company Name" />
                                    </div>
                                    <div class="clearBoth">
                                    </div>
                                    <br />
                                </div>
                            }

                            <div id="WebsiteUrlOfBroker">
                                <div class="smallContctUsAvenior float_left_simple" id="divwebsite">
                                    @*Website*@
                                </div>
                                <div class="TTL widthAvenior">

                                    @Html.TextBoxFor(model => model.quickWebsite, new { id = "txtWebSite", @class = "newTxtBox", placeholder = Html.Raw(Html.GetKeyValueFromResourceFile("divwebsite", UserCookieManager.WBStoreId, "Website")), maxlength = 500, })
                                </div>
                                <div class="clearBoth">
                                </div>
                                <br />
                            </div>

                            <div id="coorporateUserFields">
                                @if (UserCookieManager.WEBStoreMode == (int)StoreMode.Corp)
                                {
                                    <div>

                                        <div class="smallContctUsAvenior float_left_simple" id="divtxtPOBox">
                                            @*PO Box Address*@
                                        </div>
                                        <div class="TTL widthAvenior">

                                            @Html.TextBoxFor(model => model.POBoxAddress, new { id = "txtPOBox", @class = "newTxtBox", placeholder = Html.Raw(Html.GetKeyValueFromResourceFile("ltrlpobox", UserCookieManager.WBStoreId, "PoBox")), maxlength = 500, })
                                        </div>
                                        <div class="clearBoth">
                                        </div>
                                        <br />
                                    </div>
                                }
                                @if (UserCookieManager.WEBStoreMode == (int)StoreMode.Corp)
                                {
                                    <div>
                                        <div class="smallContctUsAvenior float_left_simple" id="divtxtCunit">
                                            @*Business/Corporate Unit*@
                                        </div>
                                        <div class="TTL widthAvenior">

                                            @Html.TextBoxFor(model => model.CorporateUnit, new { id = "txtCunit", @class = "newTxtBox", placeholder = Html.Raw(Html.GetKeyValueFromResourceFile("ltrlcorpunit", UserCookieManager.WBStoreId, "CorporateUnit")), maxlength = 500, })
                                            <div class="clearBoth">
                                            </div>
                                            <br />
                                        </div>
                                        <div>
                                            <div class="smallContctUsAvenior float_left_simple" id="divtxtOfcTrading">
                                                @*Office Trading Name*@
                                            </div>
                                            <div class="TTL widthAvenior">

                                                @Html.TextBoxFor(model => model.OfficeTradingName, new { id = "txtOfcTrading", @class = "newTxtBox", placeholder = Html.Raw(Html.GetKeyValueFromResourceFile("txtOfcTrading", UserCookieManager.WBStoreId, "Office Trading Name")), maxlength = 500, })
                                            </div>
                                            <div class="clearBoth">
                                            </div>
                                            <br />
                                        </div>
                                        <div>
                                            <div class="smallContctUsAvenior float_left_simple" id="divtxtContractorName">
                                                @*Contractor Name*@
                                            </div>
                                            <div class="TTL widthAvenior">

                                                @Html.TextBoxFor(model => model.ContractorName, new { id = "txtContractorName", @class = "newTxtBox", placeholder = Html.Raw(Html.GetKeyValueFromResourceFile("txtContractorName", UserCookieManager.WBStoreId, "Contractor Name")), maxlength = 500, })
                                            </div>
                                            <div class="clearBoth">
                                            </div>
                                            <br />
                                        </div>
                                        <div>
                                            <div class="smallContctUsAvenior float_left_simple" id="divtxtBpay">
                                                @*Bpay CRN*@
                                            </div>
                                            <div class="TTL widthAvenior">

                                                @Html.TextBoxFor(model => model.BPayCRN, new { id = "txtBpay", @class = "newTxtBox", placeholder = Html.Raw(Html.GetKeyValueFromResourceFile("ltrlbpaycrn", UserCookieManager.WBStoreId, "BPayCRN")), maxlength = 500, })
                                            </div>
                                            <div class="clearBoth">
                                            </div>
                                            <br />
                                        </div>
                                        <div>
                                            <div class="smallContctUsAvenior float_left_simple" id="divtxtABN">
                                                @*ABN*@
                                            </div>
                                            <div class="TTL widthAvenior">

                                                @Html.TextBoxFor(model => model.ABN, new { id = "txtABN", @class = "newTxtBox", placeholder = Html.Raw(Html.GetKeyValueFromResourceFile("txtABN", UserCookieManager.WBStoreId, "ABN")), maxlength = 500, })
                                            </div>
                                            <div class="clearBoth">
                                            </div>
                                            <br />
                                        </div>
                                        <div>
                                            <div class="smallContctUsAvenior float_left_simple" id="divtxtACN">
                                                @*ACN*@
                                            </div>
                                            <div class="TTL widthAvenior">

                                                @Html.TextBoxFor(model => model.ACN, new { id = "txtACN", @class = "newTxtBox", placeholder = Html.Raw(Html.GetKeyValueFromResourceFile("txtACN", UserCookieManager.WBStoreId, "ACN")), maxlength = 500, })
                                            </div>
                                            <div class="clearBoth">
                                            </div>
                                            <br />
                                        </div>
                                        <div>
                                            <div class="smallContctUsAvenior float_left_simple" id="divtxtAf1">
                                                @*Additional Field 1*@
                                            </div>
                                            <div class="TTL widthAvenior">

                                                @Html.TextBoxFor(model => model.AdditionalField1, new { id = "AdditionalField1", @class = "newTxtBox", placeholder = Html.Raw(Html.GetKeyValueFromResourceFile("ltrlAdditionalfield1", UserCookieManager.WBStoreId, "AdditionalField1")), maxlength = 500, })
                                            </div>
                                            <div class="clearBoth">
                                            </div>
                                            <br />
                                        </div>
                                        <div>
                                            <div class="smallContctUsAvenior float_left_simple" id="divtxtAf2">
                                                @*Additional Field 2*@
                                            </div>
                                            <div class="TTL widthAvenior">

                                                @Html.TextBoxFor(model => model.AdditionalField2, new { id = "AdditionalField2", @class = "newTxtBox", placeholder = Html.Raw(Html.GetKeyValueFromResourceFile("ltrlAdditionalField2", UserCookieManager.WBStoreId, "AdditionalField2")), maxlength = 500, })
                                            </div>
                                            <div class="clearBoth">
                                            </div>
                                            <br />
                                        </div>
                                        <div>
                                            <div class="smallContctUsAvenior float_left_simple" id="divtxtAf3">
                                                @*Additional Field 3*@
                                            </div>
                                            <div class="TTL widthAvenior">

                                                @Html.TextBoxFor(model => model.AdditionalField3, new { id = "AdditionalField3", @class = "newTxtBox", placeholder = Html.Raw(Html.GetKeyValueFromResourceFile("ltrlAdditionalField3", UserCookieManager.WBStoreId, "AdditionalField3")), maxlength = 500, })
                                            </div>
                                            <div class="clearBoth">
                                            </div>
                                            <br />
                                        </div>
                                        <div>
                                            <div class="smallContctUsAvenior float_left_simple" id="divtxtAf4">
                                                @*Additional Field 4*@
                                            </div>
                                            <div class="TTL widthAvenior">

                                                @Html.TextBoxFor(model => model.AdditionalField4, new
                                           {
                                               id = "AdditionalField4",
                                               @class = "newTxtBox",
                                               placeholder = Html.Raw(Html.GetKeyValueFromResourceFile("ltrlAddtionalfield4", UserCookieManager.WBStoreId, "AdditionalField4"))
, maxlength = 500, })
                                            </div>
                                            <div class="clearBoth">
                                            </div>
                                            <br />
                                        </div>
                                        <div>
                                            <div class="smallContctUsAvenior float_left_simple" id="divtxtAf5">
                                                @*Additional Field 5*@
                                            </div>
                                            <div class="TTL widthAvenior">

                                                @Html.TextBoxFor(model => model.AdditionalField5, new { id = "AdditionalField5", @class = "newTxtBox", placeholder = @Html.Raw(Html.GetKeyValueFromResourceFile("ltrlAdditionalField5", UserCookieManager.WBStoreId, "AdditionalField5")), maxlength = 500, })
                                            </div>
                                            <div class="clearBoth">
                                            </div>


                                            <br />
                                        </div>

                                    </div>

                                }

                                <div class="smallContctUsAvenior float_left_simple" id="div2">
                                    @*Profile Picture*@
                                </div>
                                <div class="TTL widthAvenior">

                                    <input type="file" id="fuImageUpload" name="fuImageUpload" class="newTxtBox" tabindex="12" onchange="ShowPreview(this)" />
                                </div>
                                <div class="clearBoth">
                                </div>
                                <br />
                                <div class="smallContctUsAvenior float_left_simple" id="div3">
                                </div>
                                <div class="TTL widthAvenior">

                                    @if (Model.image != null)
                                    {
                                        <img src="@Html.GetAppBasePath()@Model.image" id="imgContactPicture" alt="" class="user_image_container float_left_simple" />
                                    }
                                    else
                                    {
                                        <img src="/Content/Images/upload_your_picture.png" id="imgContactPicture" alt="" class="user_image_container float_left_simple" />
                                    }

                                    <div class="clearBoth">
                                    </div>
                                </div>
                                <div class="clearBoth">
                                </div>
                                <br />
                                <div class="smallContctUsAvenior float_left_simple">
                                    &nbsp;
                                </div>
                                <div class="TTL widthAvenior" id="ContactDetail_checks">

                                    @if (Model.IsEmailSubscription == true)
                                    {
                                        <input id="Select" name="MarketAndPromotion" type="checkbox" value="true" checked />
                                        <label for="Select">@Html.Raw(Html.GetKeyValueFromResourceFile("chkEmailMeOffers", UserCookieManager.WBStoreId, "Notify me of marketing and promotions"))</label>
                                    }
                                    else
                                    {
                                        <input id="Select" name="MarketAndPromotion" type="checkbox" value="true" />
                                        <label for="Select">@Html.Raw(Html.GetKeyValueFromResourceFile("chkEmailMeOffers", UserCookieManager.WBStoreId, "Notify me of marketing and promotions"))</label>
                                    }
                                    <input id="Select" name="MarketAndPromotion" type="hidden" value="false" />

                                </div>
                                <div class="clearBoth">
                                </div>
                                <br />
                                <div class="smallContctUsAvenior float_left_simple">
                                    &nbsp;
                                </div>
                                <div class="TTL widthAvenior" id="ContactDetails_letterSup">

                                    @if (Model.IsNewsLetterSubscription == true)
                                    {

                                        <input id="News" name="NewsLetterSubscription" type="checkbox" value="true" checked />
                                        <label for="News">@Html.Raw(Html.GetKeyValueFromResourceFile("chkSendMeNewsLetters", UserCookieManager.WBStoreId, "Subscribe to Newsletters"))
</label>
                                    }
                                    else
                                    {
                                        <input id="News" name="NewsLetterSubscription" type="checkbox" value="true" />
                                        <label for="News">@Html.Raw(Html.GetKeyValueFromResourceFile("chkSendMeNewsLetters", UserCookieManager.WBStoreId, "Subscribe to Newsletters"))</label>
                                    }
                                    <input name="NewsLetterSubscription" type="hidden" value="false" />

                                </div>
                                <div class="clearBoth">
                                </div>
                                <br />
                                <br />
                                <div class="smallContctUsAvenior float_left_simple">
                                    &nbsp;
                                </div>
                                <div class="TTL widthAvenior">
                                    <input id="btnSave" type="button" value="@Html.Raw(Html.GetKeyValueFromResourceFile("btnSave", UserCookieManager.WBStoreId, "Save"))" class="start_creating_btn rounded_corners5" tabindex="13" onclick="Update()" />

                                    &nbsp;&nbsp;

                                    <input id="btnCancel" type="button" value="@Html.Raw(Html.GetKeyValueFromResourceFile("btnCancel", UserCookieManager.WBStoreId, "Cancel"))" class="start_creating_btn rounded_corners5" tabindex="15" onclick="Cancel()" />
                                    @*<input id="btnSubmitForm" type="submit" value="Cancel"  style="display:none;" tabindex="17"  />*@
                                </div>
                            </div>

                            <div class="clearBoth">
                            </div>
                            <br />
                        </div>
                        <div class="clearBoth">

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script src="/Scripts/jquery-1.10.1.min.js"></script>
<script src="/Scripts/jquery.MultiFile.js"></script>
    <script type="text/javascript">
    var obj=null;
    $(document).ready(function(){
        //  CreateMultipleUpload();

    });
    function ShowPreview(input) {
        if (input.files && input.files[0]) {
            var ImageDir = new FileReader();
            ImageDir.onload = function(e) {
                $('#imgContactPicture').attr('src', e.target.result);
            }
            ImageDir.readAsDataURL(input.files[0]);
        }
    }

    function RefreshPage() {
        window.location.href = "/ContactDetail";
    }
    function Update() {
        if ($("#").val() == '') { }

        var errorMessage = '';
        var isValid = true;
        if ($("#txtFirstNamee").val() == '') {

            errorMessage = errorMessage + '@Html.Raw(Html.GetKeyValueFromResourceFile("divfname", UserCookieManager.WBStoreId, "First Name"))';

            isValid = false;
        }
        if ($("#txtLastNamee").val() == '') {
            if (errorMessage == '') {
                errorMessage = errorMessage + '@Html.Raw(Html.GetKeyValueFromResourceFile("divlname", UserCookieManager.WBStoreId, "Last Name"))';
            } else {
                errorMessage = errorMessage + ', @Html.Raw(Html.GetKeyValueFromResourceFile("divlname", UserCookieManager.WBStoreId, "Last Name"))';
            }
            isValid = false;
        }
        if ($("#txtCompanyName").val() == '' && @MPC.Webstore.Common.UserCookieManager.WEBStoreMode == 4) {
            if (errorMessage == '') {
                errorMessage = errorMessage + '@Html.Raw(Html.GetKeyValueFromResourceFile("divcompanyname", UserCookieManager.WBStoreId, "Company Name"))';
            } else {
                errorMessage = errorMessage + ', @Html.Raw(Html.GetKeyValueFromResourceFile("divcompanyname", UserCookieManager.WBStoreId, "Company Name"))';
            }
            isValid = false;
        }

        if (isValid == false) {
            ShowPopUp('@Html.Raw(Html.GetKeyValueFromResourceFile("ltrlMessage", UserCookieManager.WBStoreId, "Message"))', '@Html.Raw(Html.GetKeyValueFromResourceFile("ltrlplzenter", UserCookieManager.WBStoreId, "Please enter"))' + errorMessage + '@Html.Raw(Html.GetKeyValueFromResourceFile("ltrltoproceed", UserCookieManager.WBStoreId, "to proceed."))');
        } else {
            ShowLoader();
            var FirstName = $("#txtFirstNamee").val();
            var LastName = $("#txtLastNamee").val();
            var Email = $("#txtUserEmaile").val();
            var JobTitle = $("#txtJobTitle").val();
            var HomeTel1 = $("#txtUserPhone1").val();
            var Mobile = $("#txtUserCellNo").val();
            var FAX = $("#txtUserFax").val();
            var CompanyName = $("#txtCompanyName").val();
            var quickWebsite = $("#txtWebSite").val();
            var POBoxAddress = $("#txtPOBox").val();
            var CorporateUnit = $("#txtCunit").val();
            var OfficeTradingName = $("#txtOfcTrading").val();

            var ContractorName = $("#txtContractorName").val();
            var BPayCRN = $("#txtBpay").val();
            var ABN = $("#txtABN").val();
            var ACN = $("#txtACN").val();

            var AdditionalField1 = $("#AdditionalField1").val();
            var AdditionalField2 = $("#AdditionalField2").val();
            var AdditionalField3 = $("#AdditionalField3").val();
            var AdditionalField4 = $("#AdditionalField4").val();
            var AdditionalField5 = $("#AdditionalField5").val();
            var Image = $("#fuImageUpload").val();

            var IsEmailSubscription = $("#Select")[0].checked;
            var IsNewsLetterSubscription = $("#News")[0].checked;

            var data = new FormData();

            if($("#fuImageUpload").val()!=null)
            {
                var files = $("#fuImageUpload").get(0).files;

                if (files.length > 0) {
                    data.append("UploadedImage", files[0]);
                }
            }
            var Model = { FirstName: FirstName, LastName: LastName, Email: Email, JobTitle: JobTitle, HomeTel1: HomeTel1, Mobile: Mobile, FAX: FAX, quickWebsite: quickWebsite, POBoxAddress: POBoxAddress, CorporateUnit: CorporateUnit, OfficeTradingName: OfficeTradingName, ContractorName: ContractorName, BPayCRN: BPayCRN, ABN: ABN, ACN: ACN, AdditionalField1: AdditionalField1, AdditionalField2: AdditionalField2, AdditionalField3: AdditionalField3, AdditionalField4: AdditionalField4, AdditionalField5: AdditionalField5, IsEmailSubscription: IsEmailSubscription, IsNewsLetterSubscription: IsNewsLetterSubscription };
            $.ajax({
                type: "POST",
                url: "/webstoreapi/ContactImageUploader/UploadImage?FirstName=" + FirstName + "&LastName=" + LastName + "&Email=" + Email + "&JobTitle=" + JobTitle + "&HomeTel1=" + HomeTel1 + "&Mobile=" + Mobile + "&FAX=" + FAX + "&CompanyName= " + CompanyName + "" + "&quickWebsite=" + quickWebsite + "&POBoxAddress=" + POBoxAddress + "&CorporateUnit=" + CorporateUnit + "&OfficeTradingName=" + OfficeTradingName + "&ContractorName=" + ContractorName + "&BPayCRN=" + BPayCRN + "&ABN=" + ABN + "&ACN=" + ACN + "&AdditionalField1=" + AdditionalField1 + "&AdditionalField2=" + AdditionalField2 + "&AdditionalField3=" + AdditionalField3 + "&AdditionalField4=" + AdditionalField4 + "&AdditionalField5=" + AdditionalField5 + "&IsEmailSubscription=" + IsEmailSubscription + "&IsNewsLetterSubscription=" + IsNewsLetterSubscription + "",
                contentType: false,
                data: data,
                async: true,
                processData: false,
                success: function (response) {

                    $("#messgetodisply").css('display', 'block');
                    $("#messgetodisply").html('Profile Updated Sucessfuly!');

                    createCookie("WEBFirstName", FirstName);
                    createCookie("WEBLastName", LastName);
                    HideLoader();
                    $("#lblUserName").text("Hi, " + FirstName + " " + LastName);
                    $('html, body').animate({
                        scrollTop: $("#messgetodisply").offset().top
                    }, 500);
                },
                error: function (error) {
                    $("#messgetodisply").css('display', 'block');
                    $("#messgetodisply").html('@Html.Raw(Html.GetKeyValueFromResourceFile("ltrlerroupdatprofile", UserCookieManager.WBStoreId, "Error Occured While Updating Profile"))');
                    HideLoader();
                }
            });
        }


    }
    function createCookie(name, value, days) {
        if (days) {
            var date = new Date();
            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
            var expires = "; expires=" + date.toGMTString();
        }
        else var expires = "";
        document.cookie = name + "=" + value + expires + "; path=/";
    }
    function UploadImage() {

        var data = new FormData();
        var files = $("#fuImageUpload").get(0).files;

        // Add the uploaded image content to the form data collection
        if (files.length > 0) {
            data.append("UploadedImage", files[0]);
        }
        $.ajax({
            type: "POST",
            url: "/webstoreapi/ContactImageUploader/ImageFile",
            contentType: false,
            data: data,
            async: true,
            processData: false,
            success: function (response) {
                Update();
            },
            error: function (error) {
                ShowPopUp('@Html.Raw(Html.GetKeyValueFromResourceFile("ltrlerroroccuredupdateaddress", UserCookieManager.WBStoreId, "Error Occured While Adding Address"))', error);

            }
        });
    }

    function Cancel() {
        window.location.href = "/Dashboard";
    }
    function CreateMultipleUpload() {
        //set up the file upload
        $("#fuImageUpload").MultiFile(
          {
              max: 1,
              accept: 'jpg,bmp,png',
              //afterFileSelect: function (element, value, master_element) {

              //},
              //afterFileRemove: function (element, value, master_element) {

              //}
          });
    }

</script>


