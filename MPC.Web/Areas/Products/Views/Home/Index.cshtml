@{
    ViewBag.Title = "Products";
}
@section leftmenue {
}

<div class="row" id="productBinding">
    <div class="row">
        <div class="col-lg-12">
            <div class="row">
                <div class="col-lg-12">
                    <ol class="breadcrumb">
                        <li><a href="~/Dashboard/Index">Home</a></li>
                        <li class="active"><span>Products</span></li>
                    </ol>
                    <div class="clearfix">
                        <h1 class="pull-left" data-bind="text: pageHeader">Products</h1>

                    </div>
                    @Html.Partial("_Products")
                    @Html.Partial("_ProductDetail")
                </div>
            </div>
        </div>
    </div>
</div>

@Html.Partial("~/Areas/Common/Views/Shared/_ConfirmationDialog.cshtml")
@Html.Partial("~/Areas/Common/Views/Shared/_phraseLibraryDialog.cshtml")

@section Scripts{
    
    <script>
        require(["product/product.view", "dropzone", "common/confirmation.view", "common/phraseLibrary.view"]);

        $(function () {
            $('#liProducts').addClass('active');
            $('.bs-example-tooltips a').popover();
        });

        $(document).ready(function () {
            //min/max slider
            $('.slider-minmax').noUiSlider({
                range: [0, 100],
                start: [100],
                handles: 1,
                connect: 'upper',
                slide: function () {


                },
                set: function () {
                    var val = $(this).val();
                    if (val >= 60) {

                        $('.Top_Cat_Body').css("width", "22%");
                        $('.FI_TL').css("height", "210px");
                        $('.productListIcons').css("width", "239px");
                    } else if (val >= 40) {

                        $('.Top_Cat_Body').css("width", "18%");
                        $('.FI_TL').css("height", "210px");
                        $('.productListIcons').css("width", "194px");
                    } else if (val <= 20) {

                        $('.Top_Cat_Body').css("width", "13%");
                        $('.FI_TL').css("height", "140px");
                        $('.productListIcons').css("width", "139px");
                    }
                }

            });
            $('.slider-minmax').val(100, true);
        });

        function HideTempDesginerControl(RadioID) {

            if (RadioID == "1") {
                $('#LinkDesign').css('display', 'none');
            }
            else if (RadioID == "2") {
                $('#LinkDesign').css('display', 'none');
            }
            else if (RadioID == "3") {
                $('#LinkDesign').css('display', 'block');
            }

        }

        function HideSupp2() {

            if ($('input:checkbox[id=switchAutoCreateGreater]').is(':checked')) {

                $("#Supp2").css("display", "block");
                $("#tab-supplier2").css("display", "block");
            }
            else {
                $("#Supp2").css("display", "none");
                $("#tab-supplier2").css("display", "none");
            }

        }
        function HideExternalActivity(isInternal) {

            if (isInternal == "1") {
                $('#externalDiv').css('display', 'none');
            }
            else {

                $('#externalDiv').css('display', 'block');
            }

        }
        
        function AddNewSection() {


            // var txtSect = $("#txtSection").val();

            var txtSect = parseInt($('#txtSection').val());
            var incValu = txtSect + 1;
            $('#txtSection').val(incValu);



            var currentRec = parseInt($('#hfNoOfSec').val());
            var numOfRec = currentRec + 1;
            $('#hfNoOfSec').val(numOfRec);
            ShowGUISections();
            if (numOfRec > 1) {

                $('#RemoveSection').css('display', 'block');
            }
        }

        function RemoveSection() {
            //Remove the view and Show the add new button

            var txtSect = parseInt($('#txtSection').val());
            var incValu = txtSect - 1;
            $('#txtSection').val(incValu);


            var numofRec = parseInt($('#hfNoOfSec').val());

            $("#mainDivSections #Sec" + numofRec + "").css('display', 'none');

            //  $('#' + recNo).css('display', 'none');
            $('#AddSection').css('display', 'block');
            $('#hfNoOfSec').val((numofRec - 1));
            if (numofRec == 2) {

                $('#RemoveSection').css('display', 'none');
            }



        }

        function ShowGUISections() {
            var numofRec = $('#hfNoOfSec').val();

            if (numofRec >= 1) {

                $('#Sec1').css('display', 'block');
            }
            if (numofRec >= 2) {
                $('#Sec2').css('display', 'block');
            }
            if (numofRec >= 3) {
                $('#Sec3').css('display', 'block');

            }
            if (numofRec >= 4) {
                $('#Sec4').css('display', 'block');

            }
            if (numofRec >= 5) {
                $('#Sec5').css('display', 'block');
                $('#AddSection').css('display', 'none');
            }



        }
        function setServerName(card) {
            var host = $("#new-server-fqdn").val();
            var name = $("#new-server-name").val();
            var displayName = host;

            if (name) {
                displayName = name + " (" + host + ")";
            };

            card.wizard.setSubtitle(displayName);
            card.wizard.el.find(".create-server-name").text(displayName);
        }

        function validateIP(ipaddr) {
            //Remember, this function will validate only Class C IP.
            //change to other IP Classes as you need
            ipaddr = ipaddr.replace(/\s/g, "") //remove spaces for checking
            var re = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/; //regex. check for digits and in
            //all 4 quadrants of the IP
            if (re.test(ipaddr)) {
                //split into units with dots "."
                var parts = ipaddr.split(".");
                //if the first unit/quadrant of the IP is zero
                if (parseInt(parseFloat(parts[0])) == 0) {
                    return false;
                }
                //if the fourth unit/quadrant of the IP is zero
                if (parseInt(parseFloat(parts[3])) == 0) {
                    return false;
                }
                //if any part is greater than 255
                for (var i = 0; i < parts.length; i++) {
                    if (parseInt(parseFloat(parts[i])) > 255) {
                        return false;
                    }
                }
                return true;
            }
            else {
                return false;
            }
        }

        function validateFQDN(val) {
            return /^[a-z0-9-_]+(\.[a-z0-9-_]+)*\.([a-z]{2,4})$/.test(val);
        }

        function fqdn_or_ip(el) {
            var val = el.val();
            ret = {
                status: true
            };
            if (!validateFQDN(val)) {
                if (!validateIP(val)) {
                    ret.status = false;
                    ret.msg = "Invalid IP address or FQDN";
                }
            }
            return ret;
        }
        
    </script>
}
